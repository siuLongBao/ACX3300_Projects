*DATA PREPARATION;
PROC IMPORT OUT= WORK.FRAUD 
            DATAFILE= '/home/u59056217/Project 2 Predicting Accounting Fraud/Fraud.csv'
            DBMS= CSV REPLACE;
            GETNAMES=YES;
	     DATAROW=2;

PROC SORT DATA=WORK.FRAUD OUT=FRAUDRAW; BY GVKEY FYEAR;

PROC MEANS DATA=FRAUDRAW; VAR GVKEY FYEAR FRAUD; 
TITLE 'RAW FRAUD DATA BEFORE CONSTRUCTING VARIABLES'; RUN;


*CONSTRUCTING VARIABLES;
DATA FRAUDRAW; SET FRAUDRAW; BY GVKEY FYEAR;
WC=(ACT-CHE)-(LCT-DLC);
NCO=(AT-ACT-SUM(IVAO,0))-(LT-LCT-DLTT);
FIN=SUM(IVST,IVAO)-SUM(DLTT,DLC,PSTK);
CASHSALES=SALE-(RECT-LAG(RECT));
IF SSTK>0 OR DLTIS>0 THEN ACTUAL_ISSUANCE=1; ELSE ACTUAL_ISSUANCE=0;
KEEP GVKEY FYEAR WC NCO FIN RECT AT INVT PPENT CHE RECT IB FRAUD ACTUAL_ISSUANCE SALE CASHSALES;
RUN;

PROC SQL;
CREATE TABLE FRAUDRAW2 AS 
SELECT DISTINCT A.*, ((A.WC-B.WC)+(A.NCO-B.NCO)+(A.FIN-B.FIN))/((A.AT+B.AT)/2) AS RSST,
(A.RECT-B.RECT)/((A.AT+B.AT)/2) AS CH_RECT,
(A.INVT-B.INVT)/((A.AT+B.AT)/2) AS CH_INVT,
(A.AT-A.PPENT-A.CHE)/A.AT AS PERCENT_SOFT_ASSET,
(A.CASHSALES-B.CASHSALES)/B.CASHSALES AS CASH_SALE_CHANGE,
(A.IB/((A.AT+B.AT)/2))-(B.IB/((B.AT+C.AT)/2)) AS ROA_CHANGE
FROM FRAUDRAW AS A, FRAUDRAW AS B, FRAUDRAW AS C
WHERE A.GVKEY=B.GVKEY=C.GVKEY AND A.FYEAR=B.FYEAR+1=C.FYEAR+2;
QUIT;

PROC MEANS DATA=FRAUDRAW2; VAR GVKEY FYEAR FRAUD;
TITLE 'FRAUD DATA AFTER CONSTRUCTING VARIABLES'; RUN;

DATA FRAUDRAW3; SET FRAUDRAW2;
KEEP GVKEY FYEAR RSST ACTUAL_ISSUANCE CH_RECT CH_INVT PERCENT_SOFT_ASSET CASH_SALE_CHANGE ROA_CHANGE FRAUD;
RUN;

*DELETING OBSERVATIONS WITH MISSING VARIABLES;
DATA FRAUDRAW4; SET FRAUDRAW3;
ARRAY M(*) RSST ACTUAL_ISSUANCE CH_RECT CH_INVT PERCENT_SOFT_ASSET CASH_SALE_CHANGE ROA_CHANGE FRAUD;
DO I=LBOUND(M) TO HBOUND(M);
IF M(I)=. THEN DELETE;
END;
RUN;
PROC MEANS DATA=FRAUDRAW4 N MEAN MIN P1 MEDIAN P99 MAX; TITLE 'FRAUD DATA AFTER DELETING OBSERVATIONS WITH MISSING VARIABLES'; RUN;



*SAS MACRO TO DO WINSORIZION AT TOP AND BOTTOM 1%*;
%MACRO WIN_1PCT (DATA, N, VAR);
PROC MEANS DATA=&DATA NOPRINT;
VAR &VAR;
OUTPUT OUT=STAT (DROP=_TYPE_ _FREQ_)
P1=L1-L&N
P99=H1-H&N;
RUN;

DATA NEW&DATA; SET &DATA;
IF _N_=1 THEN SET STAT;
ARRAY V(*) &VAR;
ARRAY H(*) H1-H&N;
ARRAY L(*) L1-L&N;
DO I=1 TO &N;
IF .<V(I)<L(I) THEN V(I)=L(I);
IF V(I)>H(I) THEN V(I)=H(I);
END;
DROP I H1-H&N L1-L&N;

PROC MEANS DATA=NEW&DATA N P1 MEDIAN P99 MEAN MIN MAX STDDEV;
TITLE 'STATISTICS OF WINSORIZED DATA';
VAR &VAR;
RUN;
%MEND;
%WIN_1PCT(DATA=FRAUDRAW4, N=7, VAR=RSST ACTUAL_ISSUANCE CH_RECT CH_INVT PERCENT_SOFT_ASSET CASH_SALE_CHANGE ROA_CHANGE);
RUN;

DATA FRAUDDATA; SET NEWFRAUDRAW4;
WHERE FRAUD=1;

DATA NOFRAUD; SET NEWFRAUDRAW4;
WHERE FRAUD=0;
RANDOMNUM=RANUNI(0);
RUN;
PROC SORT DATA=NOFRAUD; BY RANDOMNUM;
RUN;
DATA NOFRAUD1; SET NOFRAUD;
IF _N_<=20000 THEN OUTPUT NOFRAUD1;
DROP RANDOMNUM;
RUN;

DATA DATABEINGUSED; SET NOFRAUD1;
RUN;
PROC APPEND BASE=DATABEINGUSED DATA=FRAUDDATA; RUN;



* PART II: DESCRIBING DATA;
PROC MEANS DATA=DATABEINGUSED N MEAN MIN MEDIAN MAX MAXDEC=4;
VAR FRAUD RSST ACTUAL_ISSUANCE CH_RECT CH_INVT PERCENT_SOFT_ASSET CASH_SALE_CHANGE ROA_CHANGE;
RUN;

PROC CORR DATA=DATABEINGUSED PEARSON SPEARMAN; 
VAR RSST ACTUAL_ISSUANCE CH_RECT CH_INVT PERCENT_SOFT_ASSET CASH_SALE_CHANGE ROA_CHANGE;
WITH FRAUD;
RUN;

PROC SORT DATA=DATABEINGUSED OUT=TTESTDATA;
BY FRAUD GVKEY FYEAR;
RUN;
PROC TTEST DATA=TTESTDATA H0=0;
CLASS FRAUD;
VAR RSST ACTUAL_ISSUANCE PERCENT_SOFT_ASSET;
RUN;










*PART III - LOGISTIC REGRESSION;
PROC LOGISTIC DATA=DATABEINGUSED;
MODEL FRAUD(EVENT="1")= RSST ACTUAL_ISSUANCE CH_RECT CH_INVT PERCENT_SOFT_ASSET CASH_SALE_CHANGE ROA_CHANGE
/ CTABLE PPROB=(0.005 TO 0.02 BY 0.001) OUTROC=ROC1;
OUTPUT OUT=LOGISTICMODEL P=PREDICT;
RUN;

PROC SQL;
CREATE TABLE LOGISTICMODEL1 AS
SELECT A.*, MEAN(FRAUD)AS UNCON_PROB, PREDICT/MEAN(FRAUD) AS F_SCORE
FROM LOGISTICMODEL AS A;
QUIT;

PROC RANK DATA=LOGISTICMODEL1 OUT=RK_FRAUD GROUPS=5;
VAR F_SCORE;
RANKS RANK_F_SCORE;
RUN;

PROC SORT DATA=RK_FRAUD OUT=SORTED_RK_FRAUD;
BY FRAUD RANK_F_SCORE;
RUN;

PROC FREQ DATA=SORTED_RK_FRAUD NOPRINT;
TABLE RANK_F_SCORE*FRAUD/ OUT=RANK_F_SCORE;
BY FRAUD;
RUN;

PROC SORT DATA=SORTED_RK_FRAUD; BY RANK_F_SCORE FRAUD;
PROC MEANS DATA=SORTED_RK_FRAUD MAXDEC=2 NOPRINT; 
VAR F_SCORE; 
BY RANK_F_SCORE FRAUD;
OUTPUT OUT=K MIN=MIN_F_SCORE;
RUN;  

PROC SORT DATA=RANK_F_SCORE; BY RANK_F_SCORE FRAUD;
DATA DETECTION_RATE; MERGE RANK_F_SCORE K;
BY RANK_F_SCORE FRAUD;
DROP _TYPE_ _FREQ_;
RUN;

PROC PRINT DATA=DETECTION_RATE; 
FORMAT MIN_F_SCORE 7.4 PERCENT 5.2;
RUN;










*PART IV MODEL SELECTION AND BACK TESTING;
DATA DATABEINGUSED1; SET DATABEINGUSED;
PROC LOGISTIC DATA=DATABEINGUSED1;
MODEL FRAUD(EVENT="1")= RSST ACTUAL_ISSUANCE CH_RECT CH_INVT PERCENT_SOFT_ASSET 
CASH_SALE_CHANGE ROA_CHANGE/ SELECTION=STEPWISE OUTROC=ROC2;
RUN;





*PART IV SECTION B-D REPEAT 100 TIMES;

%MACRO PARTIV_BTOD;
*NEED TO REPEAT 100 TIMES;

PROC SORT DATA=DATABEINGUSED OUT=DATABEINGUSED2; BY FYEAR;RUN;

%DO K=1 %TO 100;

DATA SELECTYEAR; SET DATABEINGUSED2;
KEEP FYEAR;
RUN;

PROC SQL;
CREATE TABLE SELECTYEAR1 AS
SELECT DISTINCT FYEAR
FROM SELECTYEAR;
QUIT;

DATA SELECTYEAR2; SET SELECTYEAR1;
RANYEAR=RANUNI(0);
RUN;

PROC SORT DATA=SELECTYEAR2; BY RANYEAR; RUN;

DATA SELECTYEAR2; SET SELECTYEAR2;
IF _N_ LE 10 THEN EST=1;
ELSE EST=0;
RUN;

PROC SORT DATA=SELECTYEAR2; BY FYEAR;

DATA A; MERGE DATABEINGUSED2 SELECTYEAR2; BY FYEAR;
RUN;

DATA EST TEST; SET A;
IF EST=1 THEN OUTPUT EST;
ELSE OUTPUT TEST;
RUN;


PROC LOGISTIC DATA=EST OUTEST=EST1 NOPRINT;
MODEL FRAUD (EVENT="1")= RSST ACTUAL_ISSUANCE PERCENT_SOFT_ASSET;
QUIT;

DATA EST2; SET EST1;
DROP _TYPE_;
RENAME FRAUD=B_FRAUD RSST=B_RSST ACTUAL_ISSUANCE=B_ACTUAL_ISSUANCE PERCENT_SOFT_ASSET=B_PERCENT_SOFT_ASSET;
RUN;
DATA TEST1; SET TEST;
IF _N_=1 THEN SET EST2;
P_LOG_ODD_RATIO=INTERCEPT+B_RSST*RSST+B_ACTUAL_ISSUANCE*ACTUAL_ISSUANCE+PERCENT_SOFT_ASSET*B_PERCENT_SOFT_ASSET;
P_PROB_FRAUD=(EXP(P_LOG_ODD_RATIO)/(1+EXP(P_LOG_ODD_RATIO)));
RUN;
*PROC PRINT DATA=TEST1 (OBS=20);
*RUN;


PROC SQL;
CREATE TABLE TEST2 AS
SELECT A.*, MEAN(FRAUD)AS UNCON_PROB, P_PROB_FRAUD/MEAN(FRAUD) AS F_SCORE
FROM TEST1 AS A;
QUIT;

DATA TEST3; SET TEST2;
IF F_SCORE>1 THEN P_FRAUD=1; ELSE P_FRAUD=0;
RUN;

PROC FREQ DATA=TEST3 NOPRINT;
TABLE P_FRAUD*FRAUD/ OUT=STATISTICS;
RUN;

DATA STATISTICS1; SET STATISTICS;
IF P_FRAUD=1 AND FRAUD=1 THEN T_POS=COUNT;
IF P_FRAUD=0 AND FRAUD=0 THEN T_NEG=COUNT;
IF FRAUD=1 THEN FRAUDCOUNT=COUNT;
RUN;

PROC SQL;
CREATE TABLE STATISTICS2 AS
SELECT T_POS/SUM(FRAUDCOUNT) AS SENSITIVITY, (SUM(T_POS,T_NEG)/SUM(COUNT)) AS ACCURACY
FROM STATISTICS1;
QUIT;

PROC MEANS DATA=STATISTICS2 NOPRINT;
OUTPUT OUT=STATISTICS3 SUM(ACCURACY)=ACCURACY SUM(SENSITIVITY)=SENSITIVITY;
RUN;

PROC APPEND BASE=PERFORMANCESTAT DATA=STATISTICS3;
RUN;
%END;
%MEND;
%PARTIV_BTOD; RUN;
PROC MEANS DATA=PERFORMANCESTAT N MEAN MEDIAN MIN Q1 Q3 MAX; RUN;

